% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catch_conditions.R
\name{catch.conditions}
\alias{catch.conditions}
\title{Catch and Save Errors and Warnings}
\usage{
catch.conditions(expr)
}
\arguments{
\item{expr}{expression to be evaluated.}
}
\value{
A list with components:
\item{value}{the result of the evaluation, a regular object or an error message.}
\item{warning}{warning message(s) generated by the evaluation, \code{NULL} if none.}
}
\description{
This function provides a mechanism for handling unusual conditions such as
errors and warnings. This is Martin Maechler's \code{tryCatch.W.E} which catches
\emph{and} saves both \strong{errors} and \strong{warnings}, and in the case of a warning,
also keeps the computed result.
}
\details{
Conditions are represented as objects that contain information about the
condition that occurred, such as a message and the call in which the
condition occurred.
The function catches errors without actually running into error. It invokes
\code{'muffleWarning'} restart to prevent printing warning and then calls
\link{withCallingHandlers} and \link{tryCatch} to catch and return, after
the evaluation of expr, any unusual conditions such as errors and warnings.
}
\note{
This function is from R base's demo \code{'demo(error.catching)'}.

Copyright (C) 2010-2012 The R Core Team.
}
\seealso{
See the functions \link{tryCatch} and \link{withCallingHandlers} which
\code{catch.conditions} wraps.
}
