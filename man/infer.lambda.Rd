% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lambda_infer.R
\name{infer.lambda}
\alias{infer.lambda}
\title{Maximum Success Probability}
\usage{
infer.lambda(
  x,
  y,
  weights = NULL,
  scale.unit = TRUE,
  min.quantile = bin.size,
  max.quantile = 3 * bin.size,
  bin.size = 0.1,
  leftmost = TRUE,
  alpha = 0.2,
  alternative = c("two.sided", "less", "greater"),
  conf.level = 0.95,
  eps = 1e-05
)
}
\arguments{
\item{x}{real vector or matrix/data.frame of numeric predictor(s).
Each predictor represents a MSB model stage.}

\item{y}{binary or binomial vector of response values (integers), its length must match
the number of rows of \code{x}.}

\item{weights}{an optional vector of \emph{weights} giving the number of trials
that resulted in the corresponding number of successes given in \code{y}.
Should be \code{NULL} (equivalent to \code{weights = 1}) or a numeric scalar
or a numeric vector (same length as \code{y}).}

\item{scale.unit}{logical, if \code{TRUE} (the default), data columns in \code{x}
are scaled to unit variance.}

\item{min.quantile, max.quantile}{scalars in the open \code{(0, 1)},
respectively the minimum and the maximum proportion of the data in \code{x}
to be used in the estimation procedure. The minimum \code{min.quantile} must
be greater than the positive tolerance value \code{eps}, but less
than 0.25, and the maximum \code{max.quantile} must be less than 0.5, but
greater than \code{min.quantile}.}

\item{bin.size}{scalar in the open \code{(0, 1)}, size of a bin (proportion of
data points) in the sequence of bins used in the estimation.}

\item{leftmost}{logical, should we always test against observations in only the leftmost bin?}

\item{alpha}{scalar in the open \code{(0, 1)}, type I error rate for detecting
a significant shift in the success probability of the binary response \code{y}.}

\item{alternative}{a character string specifying the alternative hypothesis
for each test. One of \code{'two.sided'} (default), \code{'greater'} or
\code{'less'}. Can be abbreviated (you can specify just the initial letter).
Passed to \link{fisher.test} and \link{binom.test}.}

\item{conf.level}{confidence level of the returned confidence interval for
\eqn{\lambda}. Must be a single number between \code{0} and \code{1}.
Passed to \link{binom.test}.}

\item{eps}{positive tolerance \eqn{\epsilon} used to decide when a (non random)
quantity is positive.}
}
\value{
A list with elements:
\item{lambda}{ point estimate of the asymptotic success probability.}
\item{conf.int}{ a vector of two values: lower and upper bounds of the estimate \code{lambda}.
The vector has attribute \code{conf.level} which indicates the confidence level of \code{conf.int}.}
\item{elbow.x}{ the \code{x} value (vector if \code{x} is a matrix) at which the success probability reaches \code{lambda}.}
\item{tests}{ a \code{data.frame} with rows corresponding to quantiles that delimit
the bins used for estimation, and columns:
\itemize{
\item \code{distance}: distance value (to the point of minima, see details) closing a bin;
\item \code{N}: total number of trial in a bin;
\item \code{n}: total number of successes among the \code{N} trial in a bin;
\item \code{lambda}: estimate from a bin and all left-side data points;
\item \code{odds.ratio}: odd ratio for change in the success
probability when moving to a bin;
\item \code{p.value}: p value of the test
of unit odd ratio against the alternative specified by \code{alternative}.}
}

\item{call}{ the matched call to the function.}
}
\description{
Empirically estimate the maximum success probability (\eqn{\lambda}) in
a Multistage Binomial (MSB) model.
}
\details{
This routine uses a sequence of proportion tests (see \link{fisher.test}) to
detect the left asymptotic limit of the success probability \eqn{P(Y = y|x)}
of a binary response \eqn{Y}, as a function of a vector of predictors \eqn{x}.

For one predictor (scalar \eqn{x}), the basic assumption of the estimation
procedure is that the observed range \eqn{[x_{min}, x_{max}]} of \eqn{x}
is (almost) the true meaningful range of \eqn{x}. In particular,
\code{infer.lambda} assumes that the observed \eqn{x} values include
(almost) the leftmost possible value of \code{x}. This implies that
\eqn{\beta_0 > x_{min}} under the MSB model
\eqn{P(Y = 1|x) = \lambda \times h(\beta_0 + \beta_1 x)} where
\eqn{\lambda} is the maximum success probability and \eqn{h} is a binomial
\code{link} function.

If \eqn{P(Y = 1|x)} decreases with x values, then \eqn{\beta_1 \leq 0} and the
default returned \eqn{\lambda} value estimates the maximum success probability.
Otherwise (i.e. when  \eqn{\beta_1 > 0}), the returned \eqn{\lambda}
estimates the minimum success probability. If the maximum is desired in this
case, replace \code{x} by \code{-x} in the call to \code{infer.lambda}.

For many predictors (when \code{x} is a matrix), each predictor is optionally
divided by its standard deviation (if \code{scale.unit = TRUE}, the default) to avoid
adding quantities in different units. Then the point of minima (i.e. the first
coordinate is the minimum of the first column in \code{x}, ..., the last
coordinate is the minimum of the last column in \code{x}) is then taken as
origin and the Euclidean distance of each row of \code{x} to this origin is
computed. The distance vector \code{d} is finally used in place of \code{x}
as in the case of one predictor.

Note that the function simply estimates the asymptote \eqn{\lambda} as the
proportions of ones in the vicinity of the point of minima. It is the user's
responsibility to ensure that the asymptotic behavior happens near this point
of minima and not elsewhere. Clearly, when the \emph{upper} asymptote is desired,
each column of \code{x} should be such that the proportion of ones in \code{y}
decreases with the column values. When the \emph{lower} asymptote is desired,
simply replace the appropriate input for the \emph{upper} asymptote (\code{x})
by \code{-x}.

Also note that the estimation procedure directly implies that \eqn{\hat{\lambda}}
will be generally under (upper asymptote) or over (lower asymptote) estimated.

Confidence interval for the estimated \eqn{\lambda} is obtained using \link{binom.test}.

The default argument values \code{min.quantile = bin.size},
\code{max.quantile = 3 * bin.size}, and \code{bin.size = 0.1}
are meant for small samples and small true \eqn{\lambda} value,
typically \eqn{n \leq 100} and \eqn{\lambda \leq 0.5}. The bin size should get
smaller as the sample size increases, the same holds for \code{max.quantile}
and \code{min.quantile}. Otherwise, estimates of the upper asymptote
\eqn{\hat{\lambda}} would be underestimated, and by large.
}
\examples{
## Load 'msbreg'
library(msbreg)

## Simulate some data where 'x1' and 'x2' represent some ddg for
# a mutant protein folding/binding and 'y' is mutation viability
set.seed(155)
dset <- data.frame (x1 = runif(1000, min = -1, max = 4),
                    x2 = runif(1000, min = -1, max = 4))

xframe <- msbm.frame( ~ x1 | x2,
                     lambda.formula = ~ 1,
                     data = dset)

# Set model parameters: true lambda = 0.5
theta <- c(3, -1.5, 3, -1.5, qlogis(0.5))

dset$y <- as.numeric(simulate(xframe, nsim = 1,
                              link = 'logit',
                              theta = theta))

InfLambda <- infer.lambda(y = dset$y, x = cbind(dset$x1, dset$x2))

InfLambda$lambda     # Point estimate
InfLambda$conf.int   # Confidence interval
InfLambda$tests        # Sequential tests performed

}
