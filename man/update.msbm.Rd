% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_msbm.R
\name{update.msbm}
\alias{update.msbm}
\title{Update and Re-evaluate a MSB Model Call}
\usage{
\method{update}{msbm}(
  object,
  action = c("model.frame", "apply.IC", "cancel.IC"),
  formula. = NULL,
  input.me. = NULL,
  stage.me. = NULL,
  alpha.formula. = NULL,
  lambda.formula. = NULL,
  kappa.formula. = NULL,
  ...,
  evaluate = TRUE
)
}
\arguments{
\item{object}{an existing \code{"msbm"} fit object, typically returned
by \link[msbreg]{msbreg}.}

\item{action}{character, a string indicating the updating action to
perform. The available choices include
\describe{
\item{\code{"model.frame"}}{ update the model frame related arguments
in the call that generated \code{object};}

\item{\code{"apply.IC"}}{ alter the model fit object by adjusting the fit
to include intercept-correction (if not yet applied);}

\item{\code{"cancel.IC"}}{ alter the model fit object by adjusting the fit
to exclude intercept-correction (if already applied).}
}

When \code{action = "apply.IC"} or \code{action = "cancel.IC"}, all other
arguments are ignored, and irrespective of the argument \code{evaluate},
the output is always a model fit (and never an un-evaluated \code{call}).

Cases \code{action = "apply.IC"} and \code{action = "cancel.IC"}
are IN-DEVELOPMENT. NOT READY FOR USAGE.

All the remaining arguments are used only when \code{action = "model.frame"}.}

\item{formula., input.me., stage.me., alpha.formula., lambda.formula.}{inputs
indicating adjustment to the corresponding argument of the original fit in
\code{object} (for instance, \code{formula.} is used to update the argument
\code{formula} of \link[msbreg]{msbreg}, \code{input.me.} is used for
\code{input.me} when provided, ...).}

\item{...}{further argument to \link[msbreg]{msbreg}. This can include one
or many of \code{link}, \code{data}, \code{weights}, \code{sample.weights},
\code{subset}, \code{na.action}, \code{start}, \code{control}, \code{y},
\code{frame}, and \code{method}; or any named argument of
\link[msbreg]{msbm.control}.}

\item{evaluate}{logical, if \code{TRUE} evaluate the new \code{call} else
return the \code{call}.}
}
\value{
The updated call when \code{action = "model.frame"} and
\code{evaluate = FALSE}. Otherwise, the fitted object.
}
\description{
Update a Multistage-Binomial (MSB) model fit.
\code{update.msbm} is a method for \link[stats]{update}.
It allows to update any (or all) of the components of MSB
model fit, or the fitting method.
}
\details{
The function mostly relies on \link[stats]{update.formula}: it works by
updating formulas in the \code{$call} component of \code{object}, and
identifying changes with respect to specified new input arguments.

When \code{evaluate = TRUE}, the function might \emph{fail} if any of the formulas
\code{formula.}, \code{alpha.formula.}, or \code{lambda.formula.} is updated
and \code{start} \emph{is not accordingly adjusted} in the call to \code{update}.
}
\examples{
##** Simulated two-stage logistic model example
data(test1data)
attr(test1data$y, "formula")

# Estimating a minimum success probability, assumed in [0, 1)
MSBres <- msbreg (y/Total ~ x1 + offset(off1) | x2,
                   alpha.formula = ~ 1,
                   weights = Total,
                   data = test1data)
summary (MSBres)

# The minimum success probability estimate
# is essentially zero (1.614e-05).
# Drop the related estimated intercept
MSBres1 <- update (MSBres, alpha.formula. = ~ 0)
summary (MSBres1)

# Better fit by the AIC metric

}
\seealso{
\link[msbreg]{msbreg} for fitting MSB models.
}
